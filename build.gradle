plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.de'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.h2database:h2'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'ma.glasnost.orika:orika-core:1.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-context'
    testImplementation 'com.h2database:h2'
    testImplementation 'junit:junit:4.13.2'
    testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.hamcrest:hamcrest-library'
}

//integrationTest configuration
sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/test-integration/java']
        }
        resources {
            srcDirs = ['src/test-integration/resources']
        }
    }
}

// Configures the compile and runtime configurations for the integration tests
// and includes the dependencies of the test task.
configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

// Create the task that runs the integration tests found from the
// configured source directory and uses the correct classpath.
task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

// Ensure that the check task fails the build if there are failing integration tests.
check.dependsOn integrationTest
// Ensure that our unit tests are run before our integration tests
integrationTest.dependsOn test
integrationTest.dependsOn "processIntegrationTestResources"

test {
    useJUnitPlatform()
}
